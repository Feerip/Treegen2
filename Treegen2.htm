<!-- Treegen 2.0 -->
<!-- Modified By: 341 -->
<!-- Original Treegen 1.0 Author Unknown -->
<!DOCTYPE html>
<html lang="en">
	<head>
	<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
	<title>Oregon Delta Family Tree</title>
	<script src="https://www.gstatic.com/charts/loader.js"></script>
	<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.4/jquery.min.js"></script>
	<style type="text/css">
	body {
	    font-family: monospace;
		margin: 50px 25px;
	}
	#head {
		position: fixed;
		top: 0;
		left: 0;
		background: #0070FF;
		width: 100%;
		padding: 5px;
		z-index:2;
	}
    .about {
        position: relative;
        text-align: center;
        vertical-align: middle;
        font-weight:500;
        font-size:10px;
        max-width: 100px;
        border-radius: 5px;
        margin: 4px auto 6px auto;
        border: 2px solid #b5d9ea;
        -moz-border-radius: 5px;
        -webkit-border-radius: 5px;
        -webkit-box-shadow: rgba(0, 0, 0, 0.5) 1px 2px 1px; 
        -moz-box-shadow: rgba(0, 0, 0, 0.5) 1px 2px 1px;
        background-color: #edf7ff;
        background: -webkit-gradient(linear, left top, left bottom, from(#edf7ff), to(#cde7ee));
    }
    .aboutRedline{
        position: relative;
        text-align: center;
        vertical-align: middle;
        font-weight:500;
        font-size:10px;
        max-width: 100px;
        border-radius: 5px;
        margin: 4px auto 6px auto;
        border: 2px solid #eab5b5;
        -moz-border-radius: 5px;
        -webkit-border-radius: 5px;
        -webkit-box-shadow: rgba(0, 0, 0, 0.5) 1px 2px 1px; 
        -moz-box-shadow: rgba(0, 0, 0, 0.5) 1px 2px 1px;
        background-color: #edf7ff;
        background: -webkit-gradient(linear, left top, left bottom, from(#ffeded), to(#eecdcd));
    }
    div.aboutmore:before {
        bottom: -21px;
        left: 50%;
        content: " ";
        height: 17px;
        width: 2px;
        position: absolute;
        background: black;
    }
    div.brother div.brother .about:after {
        top: -11px;
        left: 50%;
        content: " ";
        height: 9px;
        width: 2px;
        position: absolute;
        background: black;
    }
    div.brother div.brother .aboutRedline:after {
        top: -11px;
        left: 50%;
        content: " ";
        height: 9px;
        width: 2px;
        position: absolute;
        background: black;
    }
    .brother {
        display: inline-table;
    }
	.red {
		border: 2px solid red;
	}
	.green {
		border: 2px solid green;
	}
    .brother .brother {
        display: table-cell;
    }
    .little_brother {
        padding:1px;
    }
    div.connect {
        width:100%;
    }
    div.brother div.brother div.connect > div.left, div.brother div.brother div.connect > div.right {
        background: #000;
        width:50%;
        height: 2px;
        content: ' ';
        display:inline-block;
    }
    .little_brother > div.brother:first-child > div.connect > div.left {
        background: #FFF;
    }
    .little_brother > div.brother:last-child > div.connect > div.right {
        background: #FFF;
    }
    h1, h2, h3, h4, h5 {
        margin: 0px;
        padding: 0px;

    }
    h6 {
        margin: 0px;
        padding: 0px;
        text-shadow: 0 0 2px #000;
        font-size: medium;
        color: #FFF;
    }

    </style>
	<script type="text/javascript">
        google.charts.load('current', {packages: ['corechart']});
        google.charts.setOnLoadCallback(loadData);
        
		
		function loadData()
		{
            $.expr[":"].contains = $.expr.createPseudo(function(arg) {
            	return function( elem ) {
            		return $(elem).text().toUpperCase().indexOf(arg.toUpperCase()) >= 0;
            	};
            });
		    var query = new google.visualization.Query('http://spreadsheets.google.com/tq?key=0AnwJsuDoR8NzdDAxNEJ5ZEFHcWRCSnpKcGFFeW5zSXc&sheet=TreeGen&pub=1');
		    query.send(handleQueryResponse);
		}

		/**
        * Delay for a number of milliseconds
        */
        function sleep(delay) {
            var start = new Date().getTime();
            while (new Date().getTime() < start + delay);
        }

		function handleQueryResponse(response)
		{
            var url = "https://api.airtable.com/v0/appoRcGwPKMbYS0Nq/Brothers_List?maxRecords=500&view=Brothers&fields%5B%5D=BondNumber&fields%5B%5D=Status&fields%5B%5D=BigBrother&fields%5B%5D=First&fields%5B%5D=Last&fields%5B%5D=NickName";

            var req = new XMLHttpRequest();
            req.open('GET', url, false);
            req.setRequestHeader("Authorization", "Bearer keyassPcnCKLqKP1W");
            var jsonResponse;
            var fullJsonObject;
            var array
            req.onload = function()
            {
                jsonResponse = req.response;
                
            }
            req.send();
            fullJsonObject = JSON.parse(jsonResponse);
            array = fullJsonObject.records;
            
            for (var idx = 1; idx < 40 && fullJsonObject.hasOwnProperty('offset'); idx++)
            {
                if (fullJsonObject.hasOwnProperty('offset'))
                {
                    req = null;
                    req = new XMLHttpRequest();
                    req.open('GET', url + "&offset=" + fullJsonObject.offset, false);
                    req.setRequestHeader("Authorization", "Bearer keyassPcnCKLqKP1W")
                    req.onload = function()
                    {
                        jsonResponse = req.response;
                    }
                    req.send();
                    fullJsonObject = JSON.parse(jsonResponse);
                    array = array.concat(fullJsonObject.records);
                }
                if (idx % 5 == 0)
                {
                    //We have no idea how fast the caller is, when taking into account internet latency,
                    //browser overhead, or processor speed. Most of the time it will be too slow to trigger 
                    //rate limit anyways, but better safe than sorry.
                    console.log("sleeping for rate limit (5 requests of 100 records every 1 second)");
                    sleep(1000);
                }
            }
            console.log(array);

            var found = array.find(element => element.id == "recghtb3Kvvdlwxqz");
            
            console.log(array.length);

			if (response.isError())	{
				alert('Error in query: ' + response.getMessage() + ' ' + response.getDetailedMessage());
				return;
			}
            var data = array;
			var i = 0;

			for ( i = 1 ; i < data.length; i++ ) {
                var bond        = "null";
                var big_brother = "null";
                var name        = "null";
                var nickname    = "null";
                var show        = "TRUE";
                var aboutClass  = "about";

				bond            = data[i].fields.BondNumber;
                if ('BigBrother' in data[i].fields)
                {
				    big_brother = data.find(element => element.id == data[i].fields.BigBrother).fields.BondNumber;
                }
                if ('First' in data[i].fields && 'Last' in data[i].fields)
                {
				    name        = data[i].fields.First +" " + data[i].fields.Last;

                }
                if ('NickName' in data[i].fields)
                {
				    nickname    = data[i].fields.NickName;

                }
                if (data[i].fields.Status == "REDLINE")
                {
                    name = "REDLINE";
                    nickname = "N/A";
                    aboutClass = "aboutRedline";
                }
				
				if( /^[0-9]+$/i.test(bond) ){
					
					var to = $('div[bond="' + big_brother + '"] > div.little_brother');	
					if( to.length < 1 ) {
						to = $('body');
					}					
					to.append('<div class="brother" bond=' + bond + '>'							
							+ '<div class="connect"><div class="left"></div><div class="right"></div></div>'
							+ '<div class="' + aboutClass + '">'
							+ '<h2>' + bond + '</h2>'
						    + '<b>' + name + '</b>' 
						    + '<br/>' + nickname + '</div>'
							+ '<div class="little_brother"></div></div>');
				}
			}
			// Apply to all
			$('body > div.brother:not(:has(div.brother))').hide();
			$('div.brother:has(div.brother) > div.about').addClass('aboutmore');
			$('div.brother:has(div.brother) > div.aboutRedline').addClass('aboutmore');
			$('div.about').click(function() {
			   if($(this).siblings("div.little_brother").length>0)
			   {
				   $(this).siblings("div.little_brother").toggle();
			   }
			});
            $('div.aboutRedline').click(function() {
                if($(this).siblings("div.little_brother").length>0)
                {
                    $(this).siblings("div.little_brother").toggle();
                }
             });
			
			//Search
			$('#findbond').on('change keyup paste', function (){
				//Clean
				$('.red').removeClass('red');
				$('.green').removeClass('green');
				$( "#head span" ).text('');
								
				//Find
				var found = $('div.about:contains("' + $('#findbond').val() + '")');
				if(found.length > 10){
					return;
				}		
				
				found.addClass('red').parents().show();				
				
				//Locate
				var $this = found;
				var offset = $this.offset();
				var width = $this.width();				
				var centerX = offset.left + width / 2;				
				var horizontalCenter = Math.floor(window.innerWidth/2);
				var verticalCenter = Math.floor(window.innerHeight/2);
				
				//Move
				$('html, body').animate({
					scrollTop: found.offset().top - verticalCenter,
					scrollLeft: centerX - horizontalCenter
				}, 300);
				
				//Tree
				if( found.length == 1 ) {
					var famtree = found.first().parents('div.brother').map(function() {
						$(this).children('div.about').first().addClass('green');
						return $(this).attr('bond');
					}).get().join( " < " );
					$( "#head span" ).text( famtree ); 
				}
				
				//Color found
				found.removeClass('green').addClass('red').parents().show();
			});
		}
		function showAll() {
			$('div.brother').show();
			$('div.little_brother').show();
		}
	</script>
	</head>
	<body>
        
    	<div id="head" style="color: #FFF; text-shadow: 0 0 2px #000;">Find: <input id="findbond" type="text" width="50px" /> &nbsp;&nbsp; <span></span><input type="button" style="float:right; margin-right: 10px;" onclick="showAll();" value="Show All" />&nbsp;&nbsp;<input type="button" onclick="location.href='http://dztl.net/tree-old.htm';" style="float:right; margin-right: 10px;" value="Old (Ancient) Tree" />&nbsp;&nbsp;<input type="button" onclick="location.href='http://dztl.net/tree.htm';" style="float:right; margin-right: 10px;" value="Collins' Boomer Tree" />&nbsp;&nbsp;<input type="button" onclick="location.href='https://airtable.com/shrdJHpBBREpJk8NH';" style="float:right; margin-right: 10px;" value="Airtable DB" /><h6  style="float:right; margin-right: 10px; vertical-align: bottom;">Currently maintained by 341. Data is pulled from Airtable DB.</h6></div>
	</body> 
</html>

